name: Publish new release to GitHub

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  run-tests:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Swift
        uses: SwiftyLab/setup-swift@latest

      - name: Run tests
        run: swift test --enable-experimental-swift-testing

  build-and-upload:
    needs: run-tests
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
          - os: macos-14
            platform: macos
          - os: windows-latest
            platform: windows
            binary-suffix: .exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Swift
        uses: SwiftyLab/setup-swift@latest

      - name: Build release binary
        run: swift build -c release

      - name: Rename binary
        id: rename-binary
        shell: bash
        run: |
          SOURCE=".build/release/GitBranchCleanerCli${{ matrix.binary-suffix }}"
          TARGET=".build/gbc-${{ github.ref_name }}-${{ matrix.platform }}${{ matrix.binary-suffix }}"
          cp "$SOURCE" "$TARGET"
          chmod +x "$TARGET"
          echo "target=$TARGET" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: ${{ steps.rename-binary.outputs.target }}
          if-no-files-found: error

  create-release:
    needs: build-and-upload
    runs-on: ubuntu-22.04
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: assets
          merge-multiple: true

      - name: Get release id
        id: release-id
        run: |
          VERSION=${{ github.ref_name }}
          DATE=$(date +'%Y-%m-%d')
          ID=$(echo "$VERSION - $DATE" | tr -d '.' | tr ' ' '-')
          echo "id=$ID" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          files: assets/*
          body: |
            [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md#${{ steps.release-id.outputs.id }})
